//Minesweeper

/**
 * Implement a function that assigns correct numbers in a field of Minesweeper, which is represented as a 2 dimensional array.
 * Example: The size of the field is 3x4, and there are bombs at the positions [0, 0] (row index = 0, column index = 0) and [0, 1] (row index = 0, column index = 1).
 * Then, the resulting field should be:[[-1, -1, 1, 0],[2, 2, 1, 0],[0, 0, 0, 0]]
 * Your function should return the resulting 2D array after taking the following three arguments:
 * bombs: A list of bomb locations.  Given as an array of arrays.  Example: [[0, 0], [0, 1]] ([row index = 0, column index = 0], [row index = 0, column index = 1].  Assume that there are no duplicates.
 * num_rows: The number of rows in the resulting field.
 * num_columns: The number of columns in the resulting field.
 * In the resulting field:
 * -1 represents that there is a bomb in that location.
 * 1, 2, 3... etc. represents that there are 1, 2, 3... etc. bombs in the surrounding cells (including diagonally adjacent cells).
 * 0 represents that there are no bombs in the surrounding cells.
 *  
 **/


 //Minesweeper clicked

 /**
 * Implement a function that turns revealed cells into -2 given a location the user wants to click.
 * For simplicity, only reveal cells that have 0 in them.  
 * If the user clicks on any other type of cell (for example, -1 / bomb or 1, 2, or 3), just ignore the click and return the original field.  
 * If a user clicks 0, reveal all other 0's that are connected to it.
 *  Examples:  
 
    *---- 1----*  
    Given field:
        [[0, 0, 0, 0, 0],
        [0, 1, 1, 1, 0],
        [0, 1, -1, 1, 0]]
    Click location: 
        (2, 2: row index = 2, column index = 2)
    Resulting field:
        [[0, 0, 0, 0, 0],
        [0, 1, 1, 1, 0],
        [0, 1, -1, 1, 0]] (same as the given field)
 
    *---- 2 ----* 
    Given field:
        [[-1, 1, 0, 0],
        [1, 1, 0, 0],
        [0, 0, 1, 1],
        [0, 0, 1, -1]]
    Click location: 
        (1, 3: row index = 1, column index = 3)
    Resulting field:
        [[-1, 1, -2, -2],
        [1, 1, -2, -2],
        [-2, -2, 1, 1],
        [-2, -2, 1, -1]]


* Your function should take:
    field: The given field as a 2D array
    num_rows / numRows: The number of rows in the given field
    num_cols / numCols: The number of columns in the given field
    given_i / givenI: The row index of the cell the user wants to click
    given_j / givenJ: The column index of the cell the user wants to click

**/